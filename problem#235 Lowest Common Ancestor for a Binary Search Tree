/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void travel(TreeNode* root, vector<TreeNode*> path, vector<vector<TreeNode*> > & res, TreeNode* q, TreeNode* p){
        path.push_back(root);
        if(root==p||root==q)
            res.push_back(path);
        if(root->left!=NULL)
            travel(root->left, path, res, q, p);
        if(root->right!=NULL)
            travel(root->right, path, res, q, p);
    }
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL||q==NULL||p==NULL)    return NULL;
        vector<vector<TreeNode*> > res;
        travel(root, {}, res, q, p);
        int i(0);
        while(res[0][i]==res[1][i])
            i++;
        return i==0?root:res[0][i-1];
    }
};
