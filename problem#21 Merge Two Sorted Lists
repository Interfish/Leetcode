/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL)    return l2;
        if(l2==NULL)    return l1;
        ListNode *current,*prior,*first;
        int i(0);
        while(l1!=NULL||l2!=NULL){
            if(l1==NULL){
                current = new ListNode(l2->val);
                l2 = l2->next;
            }
            else if(l2==NULL){
                current = new ListNode(l1->val);
                l1 = l1->next;
            }
            else if(l1->val<l2->val){
                current = new ListNode(l1->val);
                l1 = l1->next;
            }
            else{
                current = new ListNode(l2->val);
                l2 = l2->next;
            }
            if(!(i++)){
                first = current;
                prior = current;
            }
            else{
                prior->next = current;
                prior = current;
            }
        }
        return first;
    }
};
