/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        vector<int> nums;
        while(head!=NULL){
            nums.push_back(head->val);
            head = head->next;
        }
        if(!nums.size())    return NULL;
        return construct(nums, 0, nums.size()-1);
    }
    
    TreeNode* construct(vector<int> & nums, int start, int end){
    int mid = (start+end)/2;
    TreeNode* root = new TreeNode(nums[mid]);
    if(mid>start)
        root->left = construct(nums, start, mid-1);
    if(mid<end)
        root->right = construct(nums, mid+1, end);
    return root;
    }
};
