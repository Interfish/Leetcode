/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if(head==NULL)  return  NULL;
        if(head->next==NULL)    return head;
        ListNode *cur, *insert,*temp;
        ListNode fakehead(0);
        fakehead.next = head;
        insert = &fakehead;
        cur = &fakehead;
        while(cur->next!=NULL&&cur->next->val<x){
            cur = cur->next;
            insert = insert->next;
        }
        while(cur->next!=NULL){
            if(cur->next->val<x){
                temp = insert->next;
                insert->next = cur->next;
                cur->next = cur->next->next;
                insert->next->next = temp;
                insert = insert->next;
            }
            else
                cur = cur->next;
        }
        return fakehead.next;
    }
};

/*more concise
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode node1(0), node2(0), *p1, *p2;
        p1 = &node1;
        p2 = &node2;
        while(head!=NULL){
            if(head->val<x){
                p1->next = head;
                p1 = p1->next;
            }
            else{
                p2->next = head;
                p2 = p2->next;
            }
            head = head->next;
        }
        p1->next = node2.next;
        p2->next = NULL;
        return node1.next;
    }
};
