class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        if(!triangle.size())    return 0;
        vector<int> dp = {triangle[0][0]};
        int temp1(0),temp2(0);
        for(int i(1);i<triangle.size();i++){
            temp1 = dp[0];
            dp[0] += triangle[i][0];
            for(int j(1);j<dp.size();j++){
                temp2 = dp[j];
                dp[j] = min(dp[j], temp1) + triangle[i][j];
                temp1 = temp2;
            }
            dp.push_back(temp1 + triangle[i][dp.size()]);
            for(int k(0);k<dp.size();k++)
                cout << dp[k] << ' ';
            cout << endl;
        }
        int ret(INT_MAX);
        for(int i(0);i<dp.size();i++)
            dp[i]<ret?ret=dp[i]:0;
        return ret;
    }
};
