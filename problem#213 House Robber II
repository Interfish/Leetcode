class Solution {
public:
    int rob(vector<int>& nums) {
        if(!nums.size()) return 0;
        if(nums.size()==1)  return nums[0];
        if(nums.size()==2)  return max(nums[0], nums[1]);
        if(nums.size()==3)  return max(max(nums[0], nums[1]), nums[2]);
        int dp1[nums.size()], dp2[nums.size()],i;
        dp1[0] = nums[0];
        dp1[1] = max(nums[0], nums[1]);
        dp1[2] = max(nums[0]+nums[2], nums[1]);
        dp2[1] = nums[1];
        dp2[2] = max(nums[1], nums[2]);
        for(i=3;i<nums.size()-1;i++){
            if(nums[i]+dp1[i-2]>dp1[i-1])
                dp1[i] = nums[i] + dp1[i-2];
            else
                dp1[i] = dp1[i-1];
            if(nums[i]+dp2[i-2]>dp2[i-1])
                dp2[i] = nums[i] + dp2[i-2];
            else
                dp2[i] = dp2[i-1];
        }
        if(nums[i]+dp2[i-2]>dp2[i-1])
            dp2[i] = nums[i] + dp2[i-2];
        else
            dp2[i] = dp2[i-1];
        if(dp1[i-2]+nums[i]<dp1[i-1])
            return dp1[i-1];
        return max(dp1[i-1], dp2[i]);
    }
};
