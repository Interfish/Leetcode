//(n,k) = (n-1,k)+(n-1,k-1)+....+(n-1, max(0,k-n+1)).
//establish the whole hash_map, but TLE.
class Solution {
public:
    int kInversePairs(int n, int k) {
        unordered_map<int, int> map = InverseMap(n);
        if(k<0||k>map.size()-1) return 0;
        return map[k];
    }
    unordered_map<int, int> InverseMap(int n){
        if(n==1){
            unordered_map<int, int> ret;
            ret[0] = 1;
            return ret;
        }
        if(n==2){
            unordered_map<int, int> ret;
            ret[0] = 1;
            ret[1] = 1;
            return ret;
        }
        unordered_map<int, int> last_map = InverseMap(n-1);
        unordered_map<int, int> ret;
        int possible_k(0);
        for(int i(1);i<n;i++)
            possible_k += i;
        for(int i(0); i<=possible_k/2;i++){
            int num(0);
            for(int j(max(0, i-n+1));j<=i;j++)
                num += last_map[j];
            ret[i] = num;
            ret[possible_k-i] = num;
        }
        return ret;
    }
};

//
